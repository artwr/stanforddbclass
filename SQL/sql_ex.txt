select title from Movie where director='Steven Spielberg'

SELECT distinct m.year FROM Movie m, Rating r WHERE m.mID=r.mID and r.stars>=4 order by year

select title from Movie where mID not in (select mID from Rating)

select rev.name from Reviewer rev, Rating r where rev.rID=r.rID and r.ratingDate is NULL

select rev.name as 'reviewer name', m.title as 'movie title', r.stars,r.ratingDate 
from Reviewer rev, Movie m, Rating r 
where rev.rID=r.rID and r.mID=m.mID
order by rev.name, m.title, r.stars

select rev.name,m.title from Reviewer rev, Movie m, 
(select r1.rID,r1.mID from Rating r1, Rating r2 where r1.mID = r2.mID and r1.rID=r2.rID and r1.ratingDate<r2.ratingDate and r1.stars<r2.stars) t1 where rev.rID=t1.rID and m.mID=t1.mID

select m.title, max(stars) from Rating r, Movie m
where r.mID=m.mID
group by title

select m.title, AVG(stars) from Rating r, Movie m
where r.mID=m.mID
group by title
order by AVG(stars) desc, title

#9

select name from
(select rev.name, COUNT(r.mID) as N
from Reviewer rev,Rating r 
where rev.rID=r.rID
group by rev.name) t1
where t1.N >2

Challenge Level

select distinct m.title, r.m1-r.m2 from Movie m,(select rr.mID, MAX(rr.stars) as m1, MIN(rr.stars) as m2 from Rating rr group by rr.mID)  r
where r.mID=m.mID
order by r.m1-r.m2 desc, m.title

select (
select AVG(avgr1) from Movie m,(select mID, AVG(stars) as avgr1 from Rating group by mID) r
where m.mID=r.mID and m.year<1980 ) -
(select AVG(avgr2) from Movie m,(select mID, AVG(stars) as avgr2 from Rating group by mID) r
where m.mID=r.mID and m.year>1980 )


select title, m1.director from Movie m1,(select m1.director from Movie m1, Movie m2
where m1.director=m2.director and m1.title<m2.title
order by m1.title) t1
where m1.director=t1.director
order by m1.director, m1.title

select title, m1.director from Movie m1, (select director, COUNT(title) as nfilm from Movie m group by director) m2
where m1.director=m2.director and nfilm>1
order by m1.director, m1.title

select m.title, r2.avgr2 from Movie m, (select mID, AVG(stars) as avgr2 from Rating r group by mID) r2
where m.mID=r2.mID and r2.avgr2=(select MAX(avgr) from (select mID, AVG(stars) as avgr from Rating r group by mID) t)

select * from (select m.director, m.title, t.maxr from Movie m, (select r.mID, MAX(stars) as maxr from Rating r group by r.mID) t where m.mID=t.mID and m.director is not NULL) s1, (select m.director, m.title, t.maxr from Movie m, (select r.mID, MAX(stars) as maxr from Rating r group by r.mID) t where m.mID=t.mID and m.director is not NULL) s2
where s1.director=s2.director and s1.maxr<=s2.maxr

select tt.director, m2.title,tt.mpd from (select m.director, MAX(t.maxr) as mpd from Movie m,(select r.mID, MAX(stars) as maxr from Rating r group by r.mID) t where m.mID=t.mID and m.director is not NULL
group by m.director) tt, (select r.mID, MAX(stars) as maxr from Rating r group by r.mID) t2, Movie m2
where tt.director=m2.director and tt.mpd=t2.maxr and t2.mID=m2.mID



----
Update Movie
set year=year+25
where mID in (select mID from Rating group by mID having AVG(stars) >= 4)

--

select name
from Highschooler
where ID in (select ID2 from Friend where ID1 in (select ID from Highschooler where name='Gabriel'))

select h1.name, h1.grade, h2.name, h2.grade
from Highschooler h1
join Likes l
join Highschooler h2
where h1.ID=l.ID1 and l.ID2=h2.ID and h1.grade>=h2.grade+2

select h1.name, h1.grade, h2.name, h2.grade
from Highschooler h1
join ( select l1.ID1, l1.ID2 from Likes l1 join Likes l2 where l1.ID1=l2.ID2 and l1.ID2=l2.ID1) l
join Highschooler h2
where h1.ID=l.ID1 and l.ID2=h2.ID and h1.name<h2.name

select name, grade
from Highschooler
where ID not in
(select ID1
from Friend f join Highschooler h1 join Highschooler h2
where h1.ID=f.ID1 and h2.ID=f.ID2 and h1.grade<>h2.grade)
order by grade, name

--
select f.ID1
from Friend f join Likes l
where l.ID1=f.ID1 and l.ID2=f.ID2 and ID1 not in (select f1.ID1
from Friend f1 join Likes l1 join Likes l2
where l1.ID1=f.ID1 and l1.ID2=f.ID2 and f.ID2=l2.ID1 and f.ID1=l2.ID2)

delete from Likes
where ID1 in
(select f.ID1
from Friend f join Likes l
where l.ID1=f.ID1 and l.ID2=f.ID2 and f.ID1 not in (select f1.ID1
from Friend f1 join Likes l1 join Likes l2
where l1.ID1=f.ID1 and l1.ID2=f.ID2 and f.ID2=l2.ID1 and f.ID1=l2.ID2))

insert into Friend
select f1.ID1,f2.ID2
from Friend f1 join Friend f2
where f1.ID2=f2.ID1 and f1.ID1<>f2.ID2
except
select f.ID1,f.ID2
from Friend f

--Challenge level

select H.name, H.grade
from Highschooler H
where H.ID not in (select ID1 from Likes union select ID2 from Likes)
order by grade,name


(select L1.ID1, L1.ID2 from Likes L1 EXCEPT select F1.ID1,F1.ID2 from Friend F1) AB1 join Friend F2 join Friend F3
where F2.ID2=F3.ID1 and AB1.ID1=F2.ID1 and AB1.ID2=F3.ID2

select H1.name, H1.grade, H2.name, H2.grade, H3.name, H3.grade
from Highschooler H1 join (select L1.ID1, L1.ID2 from Likes L1 EXCEPT select F1.ID1,F1.ID2 from Friend F1) AB1 join Friend F2 join Friend F3 join Highschooler H2 join Highschooler H3
where F2.ID2=F3.ID1 and AB1.ID1=F2.ID1 and AB1.ID2=F3.ID2 and H1.ID=AB1.ID1 and H2.ID=AB1.ID2 and H3.ID=F3.ID1

select COUNT(ID)-COUNT(distinct name) from Highschooler

select AVG(t.n)
from (select count(*) as n from Friend group by ID1) t


select name, grade from HighSchooler H
where ID in (select ID1 from (select ID1, COUNT(ID2) as N from Friend group by ID1) t where t.N = (
select max(N2) from (select ID1, COUNT(ID2) as N2 from Friend group by ID1) ))
